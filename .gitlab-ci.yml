image: python:3.9

variables:
  AZURE_WEBAPP_NAME: "platform-chatbot"
  AZURE_RESOURCE_GROUP: "game-analytics-rg"
  DOCKER_REGISTRY: "gameanalyticsregistry.azurecr.io"
  IMAGE_NAME: "platform-chatbot"
  IMAGE_TAG: $CI_COMMIT_SHA

stages:
  - build
  - deploy

before_script:
  - python -V
  - pip install -r requirements.txt

build:
  stage: build
  script:
    - docker login $DOCKER_REGISTRY -u $AZURE_REGISTRY_USERNAME -p $AZURE_REGISTRY_PASSWORD
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  only:
    - main

deploy:
  stage: deploy
  image: python:3.9
  before_script:
    - apk add --no-cache curl py3-pip
    - curl -sL https://aka.ms/InstallAzureCLIDeb | sh
  script:
    - echo "Deploying to Azure App Service..."

    # Login to Azure
    - az login --service-principal --username "$AZURE_SP_ID" --password "$AZURE_SP_PASSWORD" --tenant "$AZURE_TENANT_ID"

    # Configure web app to use container
    - |
      az webapp config container set \
        --resource-group "$AZURE_RESOURCE_GROUP" \
        --name "$AZURE_WEBAPP_NAME" \
        --docker-custom-image-name "$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG" \
        --docker-registry-server-url "https://$DOCKER_REGISTRY" \
        --docker-registry-server-user "$AZURE_REGISTRY_USERNAME" \
        --docker-registry-server-password "$AZURE_REGISTRY_PASSWORD"

    # Configure app settings
    - |
      az webapp config appsettings set \
        --resource-group "$AZURE_RESOURCE_GROUP" \
        --name "$AZURE_WEBAPP_NAME" \
        --settings \
          WEBSITES_PORT=8000 \
          WEBSITES_CONTAINER_START_TIME_LIMIT=1800 \
          WEBSITES_ENABLE_APP_SERVICE_STORAGE=true

  environment:
    name: production
    url: https://$AZURE_WEBAPP_NAME.azurewebsites.net
  only:
    - main
